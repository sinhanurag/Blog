<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Hibernate transaction manager beans -->
	 <tx:annotation-driven transaction-manager="hibernateTransactionManager"/>
	
	<context:component-scan base-package="com.astfnx.Blog" />
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/WEB-INF/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
 		<property name="location" value="/WEB-INF/spring/appServlet/application.properties"/>
    </bean>
	
	<bean id = "blogDataSource" class = "org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>       
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
	
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	
		<property name="dataSource" ref="blogDataSource"></property>
		
		<property name="annotatedClasses">
		
			<list>
				
				<value>com.astfnx.Blog.Entities.BlogPostEntity</value>
				<value>com.astfnx.Blog.Entities.TimeLineEntity</value>
                <value>com.astfnx.Blog.Entities.MiniBlogPostEntity</value>
		
			</list>
		
		</property>
		
		 <property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				 <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
			</props>
		</property>
	
	</bean>

	<bean id="hibernateTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		
		<property name="sessionFactory" ref="sessionFactory"></property>
	
	</bean>

	<bean id="blogPostDAO" class="com.astfnx.Blog.DAO.BlogPostDAOImpl"></bean>
	
	<bean id="timeLineDAO" class="com.astfnx.Blog.DAO.TimeLineDAOImpl"></bean>

    <bean id="miniBlogPostDAO" class="com.astfnx.Blog.DAO.MiniPostDAOImpl"></bean>
	
	<bean id="blogPostServiceFacade" class="com.astfnx.Blog.ServiceFacade.BlogPostServiceFacadeImpl">
	
		<property name="blogPostDAO" ref="blogPostDAO"></property>
		<property name="timeLineDAO" ref="timeLineDAO"></property>
        <property name="miniPostDAO" ref="miniBlogPostDAO"></property>
	
	</bean>

    <bean id="homeController" class="com.astfnx.Blog.Controllers.HomeController">

        <property name="blogPostService" ref="blogPostServiceFacade"></property>
    </bean>

	<bean id="displayBlogPostController" class="com.astfnx.Blog.Controllers.DisplayBlogPostController">
	
		<property name="blogPostService" ref="blogPostServiceFacade"></property>
	
	</bean>

    <bean id="displayArchiveController" class="com.astfnx.Blog.Controllers.DisplayArchiveController">

        <property name="blogPostService" ref="blogPostServiceFacade"></property>

    </bean>
	
	<bean id="createBlogPostController" class="com.astfnx.Blog.Controllers.CreateBlogPostController">
	
		<property name="blogPostServiceFacade" ref="blogPostServiceFacade"></property>
	
	</bean>

    <bean id="displayOthersController" class="com.astfnx.Blog.Controllers.DisplayOthersController">

        <property name="populateXMLContent" ref="populateXMLContent"></property>

    </bean>

    <bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller">

        <property name="mappingLocation" value="/WEB-INF/spring/appServlet/contentMapper.xml"></property>
        <property name="targetClass" value="com.astfnx.Blog.Util.content.ContentModel"></property>

    </bean>


    <bean id="populateXMLContent" class="com.astfnx.Blog.Util.content.populateXMLContent">

        <property name="unmarshaller" ref="castorMarshaller"></property>
        <property name="contentFileName" value="${content.contentFile}"></property>

    </bean>
</beans>